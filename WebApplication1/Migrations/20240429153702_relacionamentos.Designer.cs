// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Models;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240429153702_relacionamentos")]
    partial class relacionamentos
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("WebApplication1.Models.Assunto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Assuntos");
                });

            modelBuilder.Entity("WebApplication1.Models.CompaniaDeCarro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CompaniaDeCarros");
                });

            modelBuilder.Entity("WebApplication1.Models.Doutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Doutores");
                });

            modelBuilder.Entity("WebApplication1.Models.Estudante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Estudantes");
                });

            modelBuilder.Entity("WebApplication1.Models.EstudanteAssunto", b =>
                {
                    b.Property<int>("EstudanteId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AssuntoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("EstudanteId", "AssuntoId");

                    b.HasIndex("AssuntoId");

                    b.ToTable("EstudanteAssuntos");
                });

            modelBuilder.Entity("WebApplication1.Models.ModeloCarro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CompaniaDeCarroId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CompaniaDeCarroId")
                        .IsUnique();

                    b.ToTable("ModeloDeCarros");
                });

            modelBuilder.Entity("WebApplication1.Models.Paciente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("DoutorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DoutorId");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("WebApplication1.Models.Produto", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<double>("Preco")
                        .HasColumnType("REAL");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("WebApplication1.Models.EstudanteAssunto", b =>
                {
                    b.HasOne("WebApplication1.Models.Assunto", "Assunto")
                        .WithMany("EstudanteAssuntos")
                        .HasForeignKey("AssuntoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Estudante", "Estudante")
                        .WithMany("EstudanteAssuntos")
                        .HasForeignKey("EstudanteId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Assunto");

                    b.Navigation("Estudante");
                });

            modelBuilder.Entity("WebApplication1.Models.ModeloCarro", b =>
                {
                    b.HasOne("WebApplication1.Models.CompaniaDeCarro", "CompanhiaDeCarro")
                        .WithOne("ModeloCarro")
                        .HasForeignKey("WebApplication1.Models.ModeloCarro", "CompaniaDeCarroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompanhiaDeCarro");
                });

            modelBuilder.Entity("WebApplication1.Models.Paciente", b =>
                {
                    b.HasOne("WebApplication1.Models.Doutor", "Doutor")
                        .WithMany("Pacientes")
                        .HasForeignKey("DoutorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Doutor");
                });

            modelBuilder.Entity("WebApplication1.Models.Assunto", b =>
                {
                    b.Navigation("EstudanteAssuntos");
                });

            modelBuilder.Entity("WebApplication1.Models.CompaniaDeCarro", b =>
                {
                    b.Navigation("ModeloCarro");
                });

            modelBuilder.Entity("WebApplication1.Models.Doutor", b =>
                {
                    b.Navigation("Pacientes");
                });

            modelBuilder.Entity("WebApplication1.Models.Estudante", b =>
                {
                    b.Navigation("EstudanteAssuntos");
                });
#pragma warning restore 612, 618
        }
    }
}
